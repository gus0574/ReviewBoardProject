<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- dtd: document type definition / xml의 구조, element, attributes 정의 -->

<!-- namaspace에 Mapper 인터페이스 경로를 설정하여 연결 -->
<mapper namespace="com.ldh.web.reviewboard.board.BoardMapper">

	<!-- ENTIRE_BOARD_TB 테이블 전체 컬럼을 변수처럼 정의 -->
	<!-- post_id, user_id, category, title, content, attached_file_yn, notice_yn -->
	<sql id="postColumns">
		post_id,
		user_id,
		status,
		category,
		title,
		content,
		like_count,
		dislike_count,
		view_count,
		attached_file_yn,
		notice_yn,
		delete_yn,
		created_time,
		updated_time
	</sql>
	
	<!-- SQL 문 작성. 태그의 id는 Mapper 인터페이스의 메소드 명과 일치해야 함. -->
	
	<!-- 게시글 작성 -->
	<insert id="save" parameterType="com.ldh.web.reviewboard.board.dto.PostDTO">
		INSERT INTO ENTIRE_BOARD_TB(
			<include refid="postColumns"/>
		) VALUES (
			/*#{post_id}*/ fn_get_postid_seq(),
			/*#{user_id}*/	'admin',
			/*status*/ 'use',
			/*#{category}*/ 'category',
			/*#{title}*/ 'testTitle',
			/*#{content}*/ 'test 내용',
			/*like_count*/ 0,
			/*dislike_count*/ 0,
			/*view_count*/ 0,
			/*#{attached_file_yn}*/ 'n',
			/*#{notice_yn}*/ 'n',
			/*#{delete_yn}*/ 'n',
			/*created_time*/ NOW(),
			/*updated_time*/ NOW()
		)
	</insert>
	
	<!-- 특정 게시글 조회 -->
	<select id="findById" parameterType="java.lang.String" resultType="com.ldh.web.reviewboard.board.dto.PostVO">
		SELECT <include refid="postColumns" />
		FROM ENTIRE_BOARD_TB
		WHERE 1=1
			AND post_id = #{postId}
	</select>
	
	<!-- 전체 게시글 조회 -->
	<select id="findAll" resultType="com.ldh.web.reviewboard.board.dto.PostVO">
		SELECT <include refid="postColumns" />
		FROM ENTIRE_BOARD_TB
		WHERE 1=1
			AND delete_yn='n'
		ORDER BY post_id DESC
	</select>
	
	<!-- 게시글 수정 -->
	<update id="update" parameterType="com.ldh.web.reviewboard.board.dto.PostDTO">
		UPDATE ENTIRE_BOARD_TB
		SET
			user_id = #{userId},
			category = #{category}, 
			title = #{title}, 
			content = #{content}, 
			attached_file_yn = #{attachedFileYn}, 
			notice_yn = #{noticeYn},
			updated_time = NOW()
		WHERE 1=1
			AND post_id=#{postId}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="deleteById" parameterType="String">
		UPDATE ENTIRE_BOARD_TB
		SET
			delete_yn = 'y'
			, status = 'not use'
		WHERE 1=1
			AND post_id = #{postId}
	</delete>
	 
	 <!-- 페이징을 위한 게시글 count -->
	<select id="countPost">
		SELECT COUNT(*)
		FROM ENTIRE_BOARD_TB
		WHERE delete_yn = 'n'
	</select>

</mapper>